<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AudioController.Styles">
    <SolidColorBrush x:Key="TransparentColor" Color="#00000000" />
    <SolidColorBrush x:Key="AccentColor" Color="#EE847098" />

    <SolidColorBrush x:Key="BackgroundColor" Color="#282828" />
    <SolidColorBrush x:Key="OverlayColor" Color="#40101010" />
    <SolidColorBrush x:Key="LightOverlayColor" Color="#20101010" />
    <SolidColorBrush x:Key="TextColor" Color="#FFFFFF" />
    <SolidColorBrush x:Key="TextGrayColor" Color="#CFCFCF" />
    <SolidColorBrush x:Key="ButtonTextColor" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ButtonBackgroundColor" Color="#EE606060" />
    <SolidColorBrush x:Key="ScrollThumb" Color="#656565" />
    <SolidColorBrush x:Key="LinesColor" Color="#AAAAAA" />

    <SolidColorBrush x:Key="RedColor" Color="#ff6666" />
    <SolidColorBrush x:Key="OrangeColor" Color="#ffb833" />
    <SolidColorBrush x:Key="GreenColor" Color="#66ff66" />

    <Color x:Key="CTransparentColor">#00000000</Color>
    <Color x:Key="COverlayColor">#40101010</Color>
    <Color x:Key="CLightOverlayColor">#20101010</Color>
    <Color x:Key="ButtonMouseOverColor">#EE847098</Color>
    <Color x:Key="ButtonPressedColor">#EE9278A6</Color>

    <Style TargetType="FrameworkElement">
        <Setter Property="Margin" Value="8 8 8 8" />
    </Style>
    
    <Style x:Key="Overlay" TargetType="Panel">
        <Setter Property="Background" Value="{DynamicResource OverlayColor}" />
    </Style>

    <Style x:Key="Background" TargetType="Panel">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
    </Style>

    <Style x:Key="LightOverlay" TargetType="Panel">
        <Setter Property="Background" Value="{DynamicResource LightOverlayColor}" />
    </Style>

    <Style x:Key="LightBackground" TargetType="Panel">
        <Setter Property="Background" Value="{DynamicResource LightBackgroundColor}" />
    </Style>

    <Style x:Key="LargeText" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource TextGrayColor}" />
        <Setter Property="FontSize" Value="26" />
        <Setter Property="FontWeight" Value="Medium" />
    </Style>
    
    <Style x:Key="Header1" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Medium" />
    </Style>

    <Style x:Key="Header2" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style x:Key="DefaultText" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Thin" />
    </Style>

    <Style x:Key="DefaultRadioButton" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="FontWeight" Value="Thin" />
    </Style>

    <Style x:Key="EditableLabel" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch">
                            <TextBlock Visibility="Hidden" x:Name="HintText" IsHitTestVisible="False" Text="{TemplateBinding Tag}" />
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" TargetName="HintText" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="TextBox.GotFocus">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                From="{StaticResource CTransparentColor}" To="{StaticResource COverlayColor}" Duration="0:0:0.1" AutoReverse="False" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="TextBox.LostFocus">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                From="{StaticResource COverlayColor}" To="{StaticResource CTransparentColor}" Duration="0:0:0.1" AutoReverse="False" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="EditableLabelHeader1" TargetType="TextBox" BasedOn="{StaticResource EditableLabel}">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="Background" Value="{DynamicResource TransparentColor}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Medium" />
    </Style>

    <Style x:Key="EditableLabelDefaultText" TargetType="TextBox" BasedOn="{StaticResource EditableLabel}">
        <Setter Property="Background" Value="{DynamicResource TransparentColor}" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Thin" />
    </Style>

    <Style x:Key="DefaultButton" TargetType="Button">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextColor}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Root" Background="{TemplateBinding Background}">
                        <ContentPresenter ContentSource="Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.States>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Root"
                                                            Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                                            To="{DynamicResource ButtonMouseOverColor}"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Root"
                                                            Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                                            To="{DynamicResource ButtonPressedColor}"
                                                            Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup.States>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UnderlineBorder" TargetType="Border">
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="BorderBrush" Value="{DynamicResource LinesColor}" />
        <Setter Property="Margin" Value="0 4 0 4" />
    </Style>
    
    <Style x:Key="LightHoveredBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource LightOverlayColor}" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Border.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation 
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                From="{StaticResource CLightOverlayColor}" To="{StaticResource COverlayColor}" Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Border.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation 
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                From="{StaticResource COverlayColor}" To="{StaticResource CLightOverlayColor}" Duration="0:0:0.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultProgressBar" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
        <Setter Property="Background" Value="{DynamicResource OverlayColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid MinHeight="14" MinWidth="200" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                 Storyboard.TargetName="PART_Indicator"
                                                 Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_Track">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource COverlayColor}" />
                            </Border.BorderBrush>
                        </Border>
                        <Border x:Name="PART_Indicator"
                            HorizontalAlignment="Left"
                            Background="{TemplateBinding Foreground}">
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Some trash-->
    <Style x:Key="ScrollBarThumbStyle" TargetType="Thumb">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle Fill="{StaticResource ScrollThumb}"></Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="ScrollBar">
        <Grid>
            <Track Name="PART_Track" 
                   IsDirectionReversed="True">
                <Track.Thumb>
                    <Thumb Style="{DynamicResource ScrollBarThumbStyle}"/>
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style TargetType="ScrollBar">
        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
    </Style>
    
    <Style x:Key="Default" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="8" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0">
                            <ScrollContentPresenter />
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>